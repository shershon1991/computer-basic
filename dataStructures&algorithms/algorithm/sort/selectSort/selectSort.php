<?php

// 选择排序-简单选择排序
/*
工作原理：
在未排序的序列中找出最小（大）的元素，与序列的起始位置交换，然后再从剩余未排序的元素中继续查找最小（大）的元素，放到以排序序列的尾部，以此类推，直到所有元素排序完成
算法描述：
a.初始状态：序列为无序状态；
b.第1次排序：从n个元素中找出最小（大）的元素与第1个记录交换；
c.第2次排序：从n-1个元素中找出最小（大）的元素与第2个记录交换；
d.第 i 次排序：从n-i-1个个元素中找出最小（大）的元素与第 i 个记录交换；
e.一次类推，直到排序完成。
*/
function selectSort($arr)
{
    $len = count($arr);
    for ($i = 0; $i < $len - 1; $i++) {
        // 默认第一个是最小值
        $min = $i;
        // 注意这里是从 $i+1 开始遍历剩余的元素，选出最小值
        for ($j = $i + 1; $j < $len; $j++) {
            if ($arr[$j] < $arr[$min]) {
                $min = $j;
            }
        }
        // 如果最小值不是当前默认的最小值，那么进行替换
        if ($min != $i) {
            $tmp = $arr[$i];
            $arr[$i] = $arr[$min];
            $arr[$min] = $tmp;
        }
    }
    return $arr;
}

// 选择排序-简单选择排序
$arr = [10, 68, 12, 30, 42, 80, 85, 93, 60];
$rst = selectSort($arr);
echo implode(" ", $rst) . PHP_EOL;
// "10 12 30 42 60 68 80 85 93"